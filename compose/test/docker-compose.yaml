version: "3.3"
services:
  redis:
    container_name: redis
    image: redis:5
    restart: always
    command: redis-server --appendonly yes
    ports:
    - "6379:6379"

  mongodb:
    container_name: mongodb
    restart: always
    image: mongo:4
    ports:
    - "27017:27017"

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:5.0.1
  #   restart: always
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"

  # broker:
  #   image: confluentinc/cp-enterprise-kafka:5.0.1
  #   container_name: broker
  #   restart: always
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
  #     CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
  #     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  #     CONFLUENT_METRICS_ENABLE: 'true'
  #     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  #   ports:
  #     - "9092:9092"
  #     - "29092:29092"

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:5.0.1
  #   container_name: schema-registry
  #   restart: always
  #   depends_on:
  #     - zookeeper
  #     - broker
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  #   ports:
  #     - "8081:8081"
